syntax = "proto3";

package user.v1;

option go_package = "kratos-tiway/api/user/v1;v1";

service User {
	rpc GetUserList(SearchUser) returns (UserListResponse){}; // 用户列表
	rpc GetUserByMobile(MobileRequest) returns (UserInfoResponse){}; // 通过 mobile 查询用户
	rpc GetUserByNickname(NicknameRequest) returns (UserInfoResponse){}; // 通过 昵称 查询用户
	rpc GetUserById(IdRequest) returns (UserInfoResponse){}; // 通过 Id 查询用户
	rpc CreateUser(CreateUserInfo) returns (UserInfoResponse){}; // 创建用户
	rpc UpdateUser(UpdateUserInfo) returns (UpdateUserResponse){}; // 更新用户
	rpc CheckPassword(PasswordCheckInfo) returns (CheckResponse){}; // 检查用户密码
}

//用户列表
message SearchUser {
	int32 page = 1;
	int32 limit = 2;
	int64 id = 3;
	string name = 4;
	string nickname = 5;
	string email = 6;
	string mobile = 7;
	int32 status = 8;
	int64 created_at = 9;
}

// 用户信息
message UserInfoResponse{
	int64 id = 1;
	string name = 2;
	string mobile = 3;
	string nickName = 4;
	string email = 5;
	string password = 6;
	int32 status = 7;
	int64 created_at = 8;
}

message UserListResponse{
	int32 total = 1;
	repeated UserInfoResponse data = 2;
}

message MobileRequest{
	string mobile = 1;
}

message NicknameRequest{
	string nickname = 1;
}

message IdRequest{
	int64 id = 1;
}

message  CreateUserInfo{
	string mobile = 1;
	string nickname = 2;
	string password = 3;
}

message  UpdateUserInfo{
	int64 id = 1;
	string nickname = 2;
	string name = 3;
	string mobile = 4;
	string email = 5;
}

message PasswordCheckInfo{
	string Mobile = 1;
	string password = 2;
}

message CheckResponse{
	bool success = 1;
}

message UpdateUserResponse {
	bool success = 1;
	string message = 2;
}